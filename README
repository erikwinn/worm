WORM - DAL / ORM code geration framework

Copyright (C) 2011  Erik Winn <erikwinnmail@yahoo.com>

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

 2011-10-14 - initial release: UNSTABLE

WORM is a Data Abstraction Layer for acces to database servers and an
Object Relational Mapping system.  It consists of libraries providing a
generic API for database access and database metadata mapping of schema
structure. On top of this there is a tool to generate C++ class files for a
given arbitrary database schema - "wormgen".  wormgen accepts a few
arguments setting the database to use and optionally username, password,
output directory, etc. - "wormgen -h" shows usage.

At this writing the wormgen only supports SQlite3 and MySQL databases
and the output supports Wt's (Web Toolkit http://webtoolkit.eu) Dbo
library.  It generates header files that (with a little adjustment sometimes)
will work with Dbo for the specified existing database schemata.

Additionally the libraries provide a general API for basic database access
including query execution with structured result sets and runtime metadata 
including column information such as name, data type, defaults, extras, etc.

NOTE: This API is not fully stable! I expect there to be some changes and
do not yet recommend building off the API - wormgen is functional (if 
simple) but the libraries are under heavy development.  There may be
modifications and these should be expected until this message is removed.
You have been warned :).

Requirements:
* cmake, make, gcc, libstdc++, stl
* Boost - basic, header only (algorithm/string, lexical_cast)
* SQlite3 libraries - you may comment out the sqlite driver in src/CMakeLists.txt
if you don't want SQlite3 support
* libmysqlclient - same applies, you may comment this out

Build Instructions:

cd build && cmake ..
make

This will build the libraries and womgen in build/src. By default the static
library is built - uncomment the shared library in src/CMakeLists.txt and
comment out the static to change this (todo: add a configure script ..)

libraries: libworm.so libworm.a
binary: wormgen

Installation(optional):
cp -i build/src/libworm* /usr/local/lib/
cp -i build/src/wormgen /usr/local/bin/
ldconfig

Uninstall:
rm /usr/local/bin/wormgen
rm /usr/local/lib/libworm*

You can also use wormgen without installing by using something like this if
with the shared libraries:
(use a full path to work outside this directory):
export LD_LIBRARY_PATH=./build/src
./build/src/wormgen

Usage:
wormgen -h gives help on usage.

Library Usage and Documentation:
There are some small example programs under examples/ - I recommend
starting with these.  Also, the code is heavily commented - if you have
doxygen installed the Doxyfile will generate HTML documentation
under doc/

Enjoy!
