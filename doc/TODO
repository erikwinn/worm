
In addition to misc punchlist items flagged in the code:

* always, documentation can be improved ..
* unit tests
* some optimization 
* Possibly: revert to a varient style WSqlDatum. In any case, handle bad casts
* Possibly: move from WSqlError to WSqlException .. including a backtrace stack, this would
provide much more meaningful errors which might be displayed on a web page for 
developers.
* Implement many to many support (class ManyToManyRelationship)
* Implement 
* Implement type table support
* wormgen:
    - manytomany
    - add include files for forward declarations
    - templates for definitions, base, edit and list

* in DAL (database api, drivers)
    - statements, transactions,  binding parameters, etc
    - connection pooling
    - support for:
      Postgres
      Mongodb
    - stablize API
    - in mysql: use uncached result sets.  also, there is an awkwardness to not allowing
    nested queries .. thinking .. Possible: two methods - query() returns results, execute() not.
    execute() can open another connection ..?
    - wrap all executes in transactions.
    
    - in sqlite: clean up, parsing, various .. eh, actually needs to be largely rewritten
    
* design/architecture for ORM layer and generation:
    - CRUD scaffolding for Wt (using the templating)
    - directory layout (possibly like rails, eg. models/ views/ controllers/ etc ..)
    